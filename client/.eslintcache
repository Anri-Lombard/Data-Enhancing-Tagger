<<<<<<< HEAD
[{"C:\\Users\\racqu\\OneDrive\\Documents\\projects\\sprint\\Data-Enhancing-Tagger\\client\\src\\hooks\\store.js":"1","C:\\Users\\racqu\\OneDrive\\Documents\\projects\\sprint\\Data-Enhancing-Tagger\\client\\src\\components\\tagging.js":"2","C:\\Users\\racqu\\OneDrive\\Documents\\projects\\sprint\\Data-Enhancing-Tagger\\client\\src\\components\\footer.js":"3"},{"size":1043,"mtime":1657719032056,"results":"4","hashOfConfig":"5"},{"size":4486,"mtime":1657860584832,"results":"6","hashOfConfig":"5"},{"size":489,"mtime":1657049364264,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"136ysdw",{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\racqu\\OneDrive\\Documents\\projects\\sprint\\Data-Enhancing-Tagger\\client\\src\\hooks\\store.js",[],"C:\\Users\\racqu\\OneDrive\\Documents\\projects\\sprint\\Data-Enhancing-Tagger\\client\\src\\components\\tagging.js",["16","17","18"],"import React, { useEffect } from \"react\";\r\nimport NavBar from './navbar.js';\r\nimport Footer from './footer.js';\r\nimport Tag from './tag.js';\r\nimport TagRadios from './tagRadios.js';\r\nimport '../css/tagging.css';\r\nimport { useStore } from '../hooks/store';\r\n\r\n\r\nconst PORT = 2000;\r\n\r\nconst Tagging = React.memo(({ name, user }) => {\r\n  const [state, dispatch] = useStore();\r\n\r\n  useEffect(() => {\r\n    dispatch('filter', \"\");\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function getOneTag() {\r\n      const response = await fetch(`http://localhost:${PORT}/tag/one`);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const tag = await response.json();\r\n\r\n      dispatch('setTagToUpdate', tag)\r\n    }\r\n\r\n    getOneTag();\r\n  }, [state.tagToUpdate]);\r\n\r\n\r\n  const filter = (e) => {\r\n    const keyword = e.target.value;\r\n\r\n    dispatch('filter', keyword);\r\n  };\r\n\r\n\r\n  async function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let dataTagged = false;\r\n    let userCategoriesArray = [];\r\n    let usersTaggedArray = [];\r\n    let editedTag = [];\r\n    let updatedChosenCategory = \"\";\r\n    let updatedTagOptions = \"\";\r\n\r\n    // userCategories\r\n    if (state.tagToUpdate.userCategories === undefined) {\r\n      userCategoriesArray = new Array(state.chosenCategory);\r\n    } else {\r\n      state.tagToUpdate.userCategories.push(state.chosenCategory);\r\n      userCategoriesArray = state.tagToUpdate.userCategories;\r\n    }\r\n\r\n    // usersTagged\r\n    if (state.tagToUpdate.usersTagged === undefined) {\r\n      usersTaggedArray = new Array(user);\r\n    } else {\r\n      state.tagToUpdate.usersTagged.push(user);\r\n      usersTaggedArray = state.tagToUpdate.usersTagged;\r\n    }\r\n\r\n    if (userCategoriesArray.length === 1) {\r\n      updatedChosenCategory = userCategoriesArray[0];\r\n      // setChosenCategory(userCategoriesArray[0])\r\n    } else if (userCategoriesArray.length === 2) {\r\n      if (userCategoriesArray[0] !== userCategoriesArray[1]) {\r\n        // Decision state\r\n        updatedTagOptions = [userCategoriesArray[0], userCategoriesArray[1]]\r\n        updatedChosenCategory = userCategoriesArray[1];\r\n        // setChosenCategory(userCategoriesArray[1]);\r\n      } else {\r\n        // Agrees\r\n        dataTagged = true;\r\n      }\r\n    } else {\r\n      dataTagged = true;\r\n      updatedChosenCategory = userCategoriesArray[2];\r\n      // setChosenCategory(userCategoriesArray[2]);\r\n    }\r\n\r\n    // userCategoriesArray is undefined\r\n    editedTag = {\r\n      ...state.tagToUpdate,\r\n      category: updatedChosenCategory,\r\n      usersTagged: usersTaggedArray,\r\n      userCategories: userCategoriesArray,\r\n      tagged: dataTagged\r\n    };\r\n    \r\n    await fetch(`http://localhost:${PORT}/update/${state.tagToUpdate.id}/`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(editedTag),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    });\r\n\r\n    \r\n    // dispatch('updateTag', updatedTagOptions)\r\n    // dispatch('filter', \"\")\r\n\r\n    document.getElementById(\"tagBtn\").disabled = true;\r\n  }\r\n\r\n  function onChangeHandler(e) {\r\n    const category = e.target.value;\r\n    dispatch('setChosenCategory', category);\r\n    document.getElementById(\"tagBtn\").disabled = false;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar name={name} />\r\n\r\n      <div className=\"header\">\r\n        <h3>Tag Data With Following Details:</h3>\r\n        <div className=\"TextStyling\"> {/* Details */}\r\n        <Tag tag={state.tagToUpdate} />\r\n        </div>\r\n       \r\n\r\n        {/* Filter */}\r\n        <div className=\"form-box search-box shadow-none\">\r\n          <input\r\n            id=\"search-input\"\r\n            type=\"search\"\r\n            value={state.query}\r\n            onChange={filter}\r\n            className=\"input form-control shadow-none\"\r\n            placeholder=\"Search\"\r\n            autoFocus\r\n          />\r\n        </div>\r\n\r\n        {/* Options */}\r\n        <div className=\"form-box\">\r\n          <form onSubmit={onSubmitHandler}>\r\n            <div className=\"form-box-static\">\r\n              <TagRadios\r\n                tagToUpdate={state.tagToUpdate}\r\n                visibleOptions={state.visibleOptions}\r\n                onChangeHandler={onChangeHandler}\r\n              />\r\n            </div>\r\n            <button id=\"tagBtn\" type=\"submit\" disabled>Tag</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n})\r\n\r\nexport default Tagging;\r\n",["19","20"],"C:\\Users\\racqu\\OneDrive\\Documents\\projects\\sprint\\Data-Enhancing-Tagger\\client\\src\\components\\footer.js",[],{"ruleId":"21","severity":1,"message":"22","line":17,"column":6,"nodeType":"23","endLine":17,"endColumn":8,"suggestions":"24"},{"ruleId":"21","severity":1,"message":"22","line":35,"column":6,"nodeType":"23","endLine":35,"endColumn":25,"suggestions":"25"},{"ruleId":"26","severity":1,"message":"27","line":77,"column":9,"nodeType":"28","messageId":"29","endLine":77,"endColumn":26},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["34"],["35"],"no-unused-vars","'updatedTagOptions' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["36"],"no-negated-in-lhs",["37"],{"desc":"38","fix":"39"},{"desc":"40","fix":"41"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"42","text":"43"},"Update the dependencies array to be: [dispatch, state.tagToUpdate]",{"range":"44","text":"45"},[431,433],"[dispatch]",[840,859],"[dispatch, state.tagToUpdate]"]
=======
[{"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/hooks/tagging-store.js":"1","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tagging.js":"2","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tagRadios.js":"3","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/App.js":"4","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/login.js":"5","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/footer.js":"6","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/index.js":"7","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/navbar.js":"8","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tag.js":"9"},{"size":3825,"mtime":1657807788000,"results":"10","hashOfConfig":"11"},{"size":4219,"mtime":1657920139000,"results":"12","hashOfConfig":"11"},{"size":1329,"mtime":1657804899000,"results":"13","hashOfConfig":"11"},{"size":1601,"mtime":1657873997000,"results":"14","hashOfConfig":"11"},{"size":1332,"mtime":1657721675000,"results":"15","hashOfConfig":"11"},{"size":478,"mtime":1656572262000,"results":"16","hashOfConfig":"11"},{"size":398,"mtime":1657804899000,"results":"17","hashOfConfig":"11"},{"size":836,"mtime":1657719773000,"results":"18","hashOfConfig":"11"},{"size":772,"mtime":1657921421000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qgg2kq",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/hooks/tagging-store.js",[],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tagging.js",["38","39","40"],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tagRadios.js",[],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/App.js",[],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/login.js",[],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/footer.js",[],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/index.js",[],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/navbar.js",[],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tag.js",[],{"ruleId":"41","severity":1,"message":"42","line":17,"column":6,"nodeType":"43","endLine":17,"endColumn":8,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"42","line":35,"column":6,"nodeType":"43","endLine":35,"endColumn":25,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":77,"column":9,"nodeType":"48","messageId":"49","endLine":77,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["50"],["51"],"no-unused-vars","'updatedTagOptions' is assigned a value but never used.","Identifier","unusedVar",{"desc":"52","fix":"53"},{"desc":"54","fix":"55"},"Update the dependencies array to be: [dispatch]",{"range":"56","text":"57"},"Update the dependencies array to be: [dispatch, state.tagToUpdate]",{"range":"58","text":"59"},[415,417],"[dispatch]",[806,825],"[dispatch, state.tagToUpdate]"]
>>>>>>> origin/main
