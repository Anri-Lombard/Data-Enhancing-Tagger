[{"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/hooks/tagging-store.js":"1","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tagging.js":"2"},{"size":8159,"mtime":1657800459000,"results":"3","hashOfConfig":"4"},{"size":7959,"mtime":1657800508000,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1qgg2kq",{"filePath":"9","messages":"10","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/hooks/tagging-store.js",["11","12"],"import { initStore } from './store';\nimport { useEffect, useState } from 'react';\n\nconst configureStore = () => {\n    const actions = {\n        filter: (curState, keyword) => {\n            let updatedVisibleOptions = \"\";\n\n            if (keyword !== '') {\n                const results = curState.tagOptions.filter((option) => {\n                    return option.toLowerCase().includes(keyword.toLowerCase());\n                });\n                updatedVisibleOptions = results\n                // setVisibleOptions(results);\n            } else {\n                // setVisibleOptions(tagOptions);\n                updatedVisibleOptions = curState.tagOptions\n            }\n            // setQuery(keyword);\n            const updatedQuery = keyword;\n\n            // console.log(\"Updated query stuff:\");\n            // console.log(updatedVisibleOptions);\n            // console.log(updatedQuery);\n\n            return {\n                ...curState,\n                visibleOptions: updatedVisibleOptions,\n                query: updatedQuery,\n            }\n        },\n        updateTag: async (curState, PORT, user) => {\n            let dataTagged = false;\n            let userCategoriesArray = [];\n            let usersTaggedArray = [];\n            let editedTag = [];\n            let updatedChosenCategory = \"\";\n            let updatedTagOptions = \"\";\n\n            // userCategories\n            if (curState.tagToUpdate.userCategories === undefined) {\n                userCategoriesArray = new Array(curState.chosenCategory);\n            } else {\n                curState.tagToUpdate.userCategories.push(curState.chosenCategory);\n                userCategoriesArray = curState.tagToUpdate.userCategories;\n            }\n\n            // usersTagged\n            if (curState.tagToUpdate.usersTagged === undefined) {\n                usersTaggedArray = new Array(user);\n            } else {\n                curState.tagToUpdate.usersTagged.push(user);\n                usersTaggedArray = curState.tagToUpdate.usersTagged;\n            }\n\n            if (userCategoriesArray.length === 1) {\n                updatedChosenCategory = userCategoriesArray[0];\n                // setChosenCategory(userCategoriesArray[0])\n            } else if (userCategoriesArray.length === 2) {\n                if (userCategoriesArray[0] !== userCategoriesArray[1]) {\n                    // Decision state\n                    updatedTagOptions = [userCategoriesArray[0], userCategoriesArray[1]]\n                    updatedChosenCategory = userCategoriesArray[1];\n                    // setChosenCategory(userCategoriesArray[1]);\n                } else {\n                    // Agrees\n                    dataTagged = true;\n                }\n            } else {\n                dataTagged = true;\n                updatedChosenCategory = userCategoriesArray[2];\n                // setChosenCategory(userCategoriesArray[2]);\n            }\n\n            // userCategoriesArray is undefined\n            editedTag = {\n                id: curState.tagToUpdate.id,\n                date: curState.tagToUpdate.date,\n                description: curState.tagToUpdate.description,\n                balance: curState.tagToUpdate.balance,\n                transactionValue: curState.tagToUpdate.transactionValue,\n                category: updatedChosenCategory,\n                usersTagged: usersTaggedArray,\n                userCategories: userCategoriesArray,\n                tagged: dataTagged\n            };\n            await fetch(`http://localhost:${PORT}/update/${curState.tagToUpdate.id}/`, {\n                method: \"POST\",\n                body: JSON.stringify(editedTag),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n\n            return {\n                ...curState,\n                visibleOptions: updatedTagOptions,\n            }\n        },\n        setTagToUpdate: (curState, tag) => {\n\n            // const tagToUpdate = fetch(`http://localhost:${PORT}/tag/one`)\n            //     .then(res => (res.ok ? res : Promise.reject(res)))\n            //     .then(res => {\n            //         return res.json().then((data) => {\n            //             console.log(\"Genius\");\n            //             console.log(data);\n            //             return data;\n            //         })\n            //     })\n            // console.log(\"Genius2\");\n            // console.log(tagToUpdate);\n            return {\n                ...curState,\n                tagToUpdate: tag\n            }\n            // fetchData()\n            // console.log(curState.tagToUpdate);\n            // const thing1 = fetchData().then(data => data);\n            // console.log(thing1);\n            // return {\n            //     ...curState,\n            //     visibleOptions: [\"Joke\", \"On\", \"You\"]\n            // }\n            // fetchData();\n            // console.log(\"That\");\n            // console.log(fetchData());\n            \n            // async function updateIt() {\n            //     const tagToUpdate = await fetchData();\n            //     console.log(\"There\");\n            //     console.log(tagToUpdate);\n                \n            //     return {\n            //         ...curState,\n            //         visibleOptions: [\"Joke\", \"On\", \"You\"],\n            //         // tagToUpdate: updatedTagToUpdate,\n            //     }\n            // }\n\n            // updateIt();\n        },\n        setChosenCategory: (curState, category) => {\n            return {\n                ...curState,\n                chosenCategory: category,\n            }\n        }\n    };\n    initStore(actions, {\n        visibleOptions: [],\n        chosenCategory: \"\",\n        query: \"\",\n        tagToUpdate: {},\n        tagOptions: [\n            \"Income\",\n            \"Salary/Wages\",\n            \"Investment\",\n            \"Returned Purchase\",\n            \"Bonus\",\n            \"Interest Income\",\n            \"Reimbursement\",\n            \"Rental Income\",\n            \"Cash\", \"Check\",\n            \"Arts\", \"Music\",\n            \"Dating\",\n            \"Movies & DVDs\",\n            \"Newspaper & Magazines\",\n            \"Social Club\",\n            \"Sport\",\n            \"Games\",\n            \"TV\",\n            \"Tuition\",\n            \"Student Loan\",\n            \"Books & Supplies\",\n            \"General Shopping\",\n            \"Department Store\",\n            \"Clothing\",\n            \"Home\",\n            \"Books\",\n            \"Electronics & Software\",\n            \"Hobbies\",\n            \"Sporting Goods\",\n            \"Hair\",\n            \"Laundry\",\n            \"Beauty\",\n            \"Spa & Massage\",\n            \"Dentist\",\n            \"Doctor\",\n            \"Eye care\",\n            \"Pharmacy\",\n            \"Gym\",\n            \"Pets\",\n            \"Sports\",\n            \"Gift\",\n            \"Charity\",\n            \"Equities\",\n            \"Bonds\",\n            \"Bank products\",\n            \"Retirement\",\n            \"Annuities\",\n            \"Real-estate\",\n            \"Television\",\n            \"Home Phone\",\n            \"Internet\",\n            \"Mobile Phone\",\n            \"Utility Bill\",\n            \"Car Insurance\",\n            \"Car Payment\",\n            \"Parking\",\n            \"Public transport\",\n            \"Service & Repairs\",\n            \"Taxi\", \"Fuel\",\n            \"Air Travel\",\n            \"Hotel\",\n            \"Rental Car\",\n            \"Vacation\",\n            \"Service Fee\",\n            \"Late Fee\",\n            \"Finance Charge\",\n            \"ATM Fee\",\n            \"Bank Fee\",\n            \"Commissions\",\n            \"Advertising\",\n            \"Office Supplies\",\n            \"Printing\",\n            \"Shipping\",\n            \"Legal\",\n            \"Advisory and Consulting\",\n            \"Financial Services\",\n            \"Lawyer\",\n            \"Tax\",\n            \"Betting\",\n            \"Lottery\",\n            \"Casino\",\n            \"Rent\",\n            \"Mortgage\",\n            \"Secured loans\",\n            \"Property taxes\",\n            \"Repairs & Maintenance\",\n            \"Pension payments\",\n            \"Long Term insurance\",\n            \"Short term insurance\",\n            \"Insurance (short/long)\",\n            \"Health insurance\"\n        ]\n    })\n}\n\nexport default configureStore;","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tagging.js",["13","14","15","16","17"],{"ruleId":"18","severity":1,"message":"19","line":2,"column":10,"nodeType":"20","messageId":"21","endLine":2,"endColumn":19},{"ruleId":"18","severity":1,"message":"22","line":2,"column":21,"nodeType":"20","messageId":"21","endLine":2,"endColumn":29},{"ruleId":"18","severity":1,"message":"23","line":14,"column":10,"nodeType":"20","messageId":"21","endLine":14,"endColumn":21},{"ruleId":"18","severity":1,"message":"24","line":14,"column":23,"nodeType":"20","messageId":"21","endLine":14,"endColumn":37},{"ruleId":"25","severity":1,"message":"26","line":20,"column":6,"nodeType":"27","endLine":20,"endColumn":8,"suggestions":"28"},{"ruleId":"25","severity":1,"message":"29","line":40,"column":6,"nodeType":"27","endLine":40,"endColumn":8,"suggestions":"30"},{"ruleId":"18","severity":1,"message":"31","line":76,"column":11,"nodeType":"20","messageId":"21","endLine":76,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'tagToUpdate' is assigned a value but never used.","'setTagToUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state.tagToUpdate'. Either include them or remove the dependency array.","ArrayExpression",["32"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["33"],"'keyword' is assigned a value but never used.",{"desc":"34","fix":"35"},{"desc":"36","fix":"37"},"Update the dependencies array to be: [dispatch, state.tagToUpdate]",{"range":"38","text":"39"},"Update the dependencies array to be: [dispatch]",{"range":"40","text":"41"},[539,541],"[dispatch, state.tagToUpdate]",[984,986],"[dispatch]"]