[{"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/login.js":"1","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tagging.js":"2","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/hooks/store.js":"3","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/hooks/tagging-store.js":"4","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/logout.js":"5","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/footer.js":"6","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tagRadios.js":"7","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/App.js":"8","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tag.js":"9"},{"size":1332,"mtime":1657721675000,"results":"10","hashOfConfig":"11"},{"size":7438,"mtime":1657799687000,"results":"12","hashOfConfig":"11"},{"size":1005,"mtime":1657719773000,"results":"13","hashOfConfig":"11"},{"size":8716,"mtime":1657799717000,"results":"14","hashOfConfig":"11"},{"size":1449,"mtime":1657719773000,"results":"15","hashOfConfig":"11"},{"size":478,"mtime":1656572262000,"results":"16","hashOfConfig":"11"},{"size":1254,"mtime":1657719773000,"results":"17","hashOfConfig":"11"},{"size":1848,"mtime":1657721675000,"results":"18","hashOfConfig":"11"},{"size":738,"mtime":1657719773000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1qgg2kq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/login.js",[],["40","41"],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tagging.js",["42","43"],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/hooks/store.js",[],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/hooks/tagging-store.js",["44","45"],"import { initStore } from './store';\nimport { useEffect, useState } from 'react';\n\nconst configureStore = () => {\n    const actions = {\n        filter: (curState, keyword) => {\n            let updatedVisibleOptions = \"\";\n\n            if (keyword !== '') {\n                const results = curState.tagOptions.filter((option) => {\n                    return option.toLowerCase().includes(keyword.toLowerCase());\n                });\n                updatedVisibleOptions = results\n                // setVisibleOptions(results);\n            } else {\n                // setVisibleOptions(tagOptions);\n                updatedVisibleOptions = curState.tagOptions\n            }\n            // setQuery(keyword);\n            const updatedQuery = keyword;\n\n            // console.log(\"Updated query stuff:\");\n            // console.log(updatedVisibleOptions);\n            // console.log(updatedQuery);\n\n            return {\n                ...curState,\n                visibleOptions: updatedVisibleOptions,\n                query: updatedQuery,\n            }\n        },\n        updateTag: async (curState, PORT, user) => {\n            let dataTagged = false;\n            let userCategoriesArray = [];\n            let usersTaggedArray = [];\n            let editedTag = [];\n            let updatedChosenCategory = \"\";\n            let updatedTagOptions = \"\";\n\n            // userCategories\n            if (curState.tagToUpdate.userCategories === undefined) {\n                userCategoriesArray = new Array(curState.chosenCategory);\n            } else {\n                curState.tagToUpdate.userCategories.push(curState.chosenCategory);\n                userCategoriesArray = curState.tagToUpdate.userCategories;\n            }\n\n            // usersTagged\n            if (curState.tagToUpdate.usersTagged === undefined) {\n                usersTaggedArray = new Array(user);\n            } else {\n                curState.tagToUpdate.usersTagged.push(user);\n                usersTaggedArray = curState.tagToUpdate.usersTagged;\n            }\n\n            if (userCategoriesArray.length === 1) {\n                updatedChosenCategory = userCategoriesArray[0];\n                // setChosenCategory(userCategoriesArray[0])\n            } else if (userCategoriesArray.length === 2) {\n                if (userCategoriesArray[0] !== userCategoriesArray[1]) {\n                    // Decision state\n                    updatedTagOptions = [userCategoriesArray[0], userCategoriesArray[1]]\n                    updatedChosenCategory = userCategoriesArray[1];\n                    // setChosenCategory(userCategoriesArray[1]);\n                } else {\n                    // Agrees\n                    dataTagged = true;\n                }\n            } else {\n                dataTagged = true;\n                updatedChosenCategory = userCategoriesArray[2];\n                // setChosenCategory(userCategoriesArray[2]);\n            }\n\n            // userCategoriesArray is undefined\n            editedTag = {\n                id: curState.tagToUpdate.id,\n                date: curState.tagToUpdate.date,\n                description: curState.tagToUpdate.description,\n                balance: curState.tagToUpdate.balance,\n                transactionValue: curState.tagToUpdate.transactionValue,\n                category: updatedChosenCategory,\n                usersTagged: usersTaggedArray,\n                userCategories: userCategoriesArray,\n                tagged: dataTagged\n            };\n            await fetch(`http://localhost:${PORT}/update/${curState.tagToUpdate.id}/`, {\n                method: \"POST\",\n                body: JSON.stringify(editedTag),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n\n            return {\n                ...curState,\n                visibleOptions: updatedTagOptions,\n            }\n        },\n        getOneTag: (curState, PORT) => {\n\n            // const tagToUpdate = fetch(`http://localhost:${PORT}/tag/one`)\n            //     .then(res => (res.ok ? res : Promise.reject(res)))\n            //     .then(res => {\n            //         return res.json().then((data) => {\n            //             console.log(\"Genius\");\n            //             console.log(data);\n            //             return data;\n            //         })\n            //     })\n            // console.log(\"Genius2\");\n            // console.log(tagToUpdate);\n\n            async function fetchData() {\n                const response = await fetch(`http://localhost:${PORT}/tag/one`);\n\n                if (!response.ok) {\n                    const message = `An error occurred: ${response.statusText}`;\n                    window.alert(message);\n                    return;\n                }\n\n\n                const tag = await response.json();\n                console.log(\"This\");\n                console.log(tag);\n\n                return tag;\n            }\n            return {\n                ...curState,\n                visibleOptions: [\"Joke\", \"On\", \"You\"],\n                tagToUpdate: fetchData()\n            }\n            // fetchData()\n            // console.log(curState.tagToUpdate);\n            // const thing1 = fetchData().then(data => data);\n            // console.log(thing1);\n            // return {\n            //     ...curState,\n            //     visibleOptions: [\"Joke\", \"On\", \"You\"]\n            // }\n            // fetchData();\n            // console.log(\"That\");\n            // console.log(fetchData());\n            \n            // async function updateIt() {\n            //     const tagToUpdate = await fetchData();\n            //     console.log(\"There\");\n            //     console.log(tagToUpdate);\n                \n            //     return {\n            //         ...curState,\n            //         visibleOptions: [\"Joke\", \"On\", \"You\"],\n            //         // tagToUpdate: updatedTagToUpdate,\n            //     }\n            // }\n\n            // updateIt();\n        },\n        setChosenCategory: (curState, category) => {\n            return {\n                ...curState,\n                chosenCategory: category,\n            }\n        }\n    };\n    initStore(actions, {\n        visibleOptions: [],\n        chosenCategory: \"\",\n        query: \"\",\n        tagToUpdate: {},\n        tagOptions: [\n            \"Income\",\n            \"Salary/Wages\",\n            \"Investment\",\n            \"Returned Purchase\",\n            \"Bonus\",\n            \"Interest Income\",\n            \"Reimbursement\",\n            \"Rental Income\",\n            \"Cash\", \"Check\",\n            \"Arts\", \"Music\",\n            \"Dating\",\n            \"Movies & DVDs\",\n            \"Newspaper & Magazines\",\n            \"Social Club\",\n            \"Sport\",\n            \"Games\",\n            \"TV\",\n            \"Tuition\",\n            \"Student Loan\",\n            \"Books & Supplies\",\n            \"General Shopping\",\n            \"Department Store\",\n            \"Clothing\",\n            \"Home\",\n            \"Books\",\n            \"Electronics & Software\",\n            \"Hobbies\",\n            \"Sporting Goods\",\n            \"Hair\",\n            \"Laundry\",\n            \"Beauty\",\n            \"Spa & Massage\",\n            \"Dentist\",\n            \"Doctor\",\n            \"Eye care\",\n            \"Pharmacy\",\n            \"Gym\",\n            \"Pets\",\n            \"Sports\",\n            \"Gift\",\n            \"Charity\",\n            \"Equities\",\n            \"Bonds\",\n            \"Bank products\",\n            \"Retirement\",\n            \"Annuities\",\n            \"Real-estate\",\n            \"Television\",\n            \"Home Phone\",\n            \"Internet\",\n            \"Mobile Phone\",\n            \"Utility Bill\",\n            \"Car Insurance\",\n            \"Car Payment\",\n            \"Parking\",\n            \"Public transport\",\n            \"Service & Repairs\",\n            \"Taxi\", \"Fuel\",\n            \"Air Travel\",\n            \"Hotel\",\n            \"Rental Car\",\n            \"Vacation\",\n            \"Service Fee\",\n            \"Late Fee\",\n            \"Finance Charge\",\n            \"ATM Fee\",\n            \"Bank Fee\",\n            \"Commissions\",\n            \"Advertising\",\n            \"Office Supplies\",\n            \"Printing\",\n            \"Shipping\",\n            \"Legal\",\n            \"Advisory and Consulting\",\n            \"Financial Services\",\n            \"Lawyer\",\n            \"Tax\",\n            \"Betting\",\n            \"Lottery\",\n            \"Casino\",\n            \"Rent\",\n            \"Mortgage\",\n            \"Secured loans\",\n            \"Property taxes\",\n            \"Repairs & Maintenance\",\n            \"Pension payments\",\n            \"Long Term insurance\",\n            \"Short term insurance\",\n            \"Insurance (short/long)\",\n            \"Health insurance\"\n        ]\n    })\n}\n\nexport default configureStore;","/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/logout.js",[],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/footer.js",[],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tagRadios.js",[],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/App.js",["46"],"/Volumes/EXT_DRIVE_2TB_1/app_dev/SprintHive/Data-Enhancing-Tagger/client/src/components/tag.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":19,"column":6,"nodeType":"53","endLine":19,"endColumn":8,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":55,"column":11,"nodeType":"57","messageId":"58","endLine":55,"endColumn":18},{"ruleId":"55","severity":1,"message":"59","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":19},{"ruleId":"55","severity":1,"message":"60","line":2,"column":21,"nodeType":"57","messageId":"58","endLine":2,"endColumn":29},{"ruleId":"55","severity":1,"message":"61","line":1,"column":38,"nodeType":"57","messageId":"58","endLine":1,"endColumn":46},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state.tagToUpdate'. Either include them or remove the dependency array.","ArrayExpression",["64"],"no-unused-vars","'keyword' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Suspense' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [dispatch, state.tagToUpdate]",{"range":"67","text":"68"},[473,475],"[dispatch, state.tagToUpdate]"]