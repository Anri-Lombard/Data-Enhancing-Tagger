[{"/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/components/logout.js":"1","/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/components/tagging.js":"2","/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/components/navbar.js":"3","/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/App.js":"4","/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/index.js":"5","/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/components/login.js":"6"},{"size":1699,"mtime":1656505031344,"results":"7","hashOfConfig":"8"},{"size":4814,"mtime":1656505316908,"results":"9","hashOfConfig":"8"},{"size":1409,"mtime":1656500798589,"results":"10","hashOfConfig":"8"},{"size":1327,"mtime":1656499717299,"results":"11","hashOfConfig":"8"},{"size":597,"mtime":1656222406702,"results":"12","hashOfConfig":"8"},{"size":1862,"mtime":1656502794731,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sg6ji1",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/components/logout.js",[],"/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/components/tagging.js",[],"/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/components/navbar.js",["27","28"],"/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/App.js",["29","30"],"import React, { useEffect, useState } from 'react';\n// import logo from './logo.svg';\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport './App.css';\n\nimport Tagging from './components/tagging'\nimport Login from './components/login'\nimport Logout from './components/logout'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport { gapi } from 'gapi-script'\n\nconst clientId = \"209297339002-8oele42ri4qokv2qefi8n7bds2a9jmjk.apps.googleusercontent.com\";\n\nfunction App() {\n  // const [loggedIn, setLoggedIn] = useState(false)\n  // const [userName, setUserName] = useState(\"\")\n\n  useEffect(() => {\n    function start() {\n      gapi.auth2.init({\n        client_id: clientId,\n        scope: \"\"\n      })\n    };\n\n    gapi.load('client:auth2', start)\n  })\n\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        {/* <Route exact path=\"/\" element={loggedIn ? <Tagging name={userName} /> : <Navigate to=\"/login\" />} />\n        <Route exact path=\"/login\">\n          loggedIn ? <Navigate to=\"/\" /> : <Login name={setUserName} isLoggedIn={setLoggedIn} />\n        </Route> */}\n        <Route exact path=\"/\" element={<Tagging />} />\n        <Route exact path=\"/login\" element={<Login />} />\n        <Route exact path=\"/logout\" element={<Logout />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/index.js",[],"/Users/anrilombard/Desktop/SprintHive/Data-Enhancing-Tagger/client/src/components/login.js",[],{"ruleId":"31","severity":1,"message":"32","line":4,"column":20,"nodeType":"33","messageId":"34","endLine":4,"endColumn":26},{"ruleId":"31","severity":1,"message":"35","line":5,"column":3,"nodeType":"33","messageId":"34","endLine":5,"endColumn":7},{"ruleId":"31","severity":1,"message":"36","line":1,"column":28,"nodeType":"33","messageId":"34","endLine":1,"endColumn":36},{"ruleId":"31","severity":1,"message":"37","line":3,"column":25,"nodeType":"33","messageId":"34","endLine":3,"endColumn":33},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","'Navigate' is defined but never used."]